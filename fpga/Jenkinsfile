pipeline{
    agent { label 'verify' }
    post {
        always{
            
            SUMMARY = sh(script: "cat /home/jackeydu/jenkins/workspace/report/result.txt", returnStdout: true).trim()
            sh '''
            # clean up
            #fpga/dpbit.py $SH_FPLAT $SH_JOBDIR $SH_MODEL rm $SH_APBIT $SH_SEBIT
            #fpga/scm.sh $SH_JOBDIR teardown
            echo "Debug"
            '''
            script{
                publishHTML (target: [
                    allowMissing: false,
                    alwaysLinkToLastBuild: false,
                    keepAll: true,
                    reportDir: '/home/jackeydu/jenkins/workspace/report/',
                    reportFiles: 'reports.html',
                    reportName: "${SH_MODEL}-Test-Report"
                ])
            }
            wrap([$class: 'BuildUser']) {
               script {
                   BUILD_USER = "${env.BUILD_USER}"
                   BUILD_USER_EMAIL = "${env.BUILD_USER_EMAIL}"
               }
			}
            mail bcc: '', 
            body: "Dear All,\n\n\tBelow is the summary: \n\t${SUMMARY}. \n\tThe detailed report is: https://ci.cixcomputing.com/job/${SH_JOBDIR}/AP_5fBSP-Test-Report/", 
            cc: 'anthony.tian@cixtech.com', 
            from: 'devops@cixcomputing.com', replyTo: '', 
            subject: "FPGA Linux BSP CI Test Finished with ${RESULT} result.", 
            to: "${TOLIST}"
        }
    }
    parameters {
        choice(name: 'Model', choices: ['BROM_RSA', 'BROM_SM2', 'BROM_XIP_RSA', 'BROM_XIP_SM2', 'AP_BSP'],
                description: 'Select the test model...')
        choice(name: 'SE_Bitfile_Version', choices: ['fpga3_20221227_csu_se_new_dp_usb2'],
                description: 'Input the bitfile version for BootROM or SE firmware test')
        choice(name: 'AP_Bitfile_Version', choices: ['ap_20230222_downsize', 'ap_20230129'],
                description: 'Input the bitfile version for AP model test')
        choice(name: 'Image_Type', choices: ['linux-daily/cix_sky1_alpha0.4_dev', 'linux-daily/cix_master',
                'linux-release/cix_sky1_Alpha0.4-rc2', 'linux-ci'], 
                description: 'Select the test Image type...')
        string(name: 'Image_Version', defaultValue: 'latest', 
                description: 'Input the target Image version in nexus like 2023020904-0000101')
        choice(name: 'FPGA_PLAT', choices: ['fpga01', 'fpga02', 'fpga03-sub1', 'fpga03-sub2', 'fpga03-sub3'],
                description: 'Select the FPGA board...')
        choice(name: 'KEYWORDS', choices: ['bspci', 'qspidriver', 'qspixip'],
                description: 'Select the test model...')

    }
    environment {
        SH_MODEL = "$params.Model"
        SH_SEBIT =  "$params.SE_Bitfile_Version"
        SH_APBIT = "$params.AP_Bitfile_Version"
        SH_ITYPE =  "$params.Image_Type"
        SH_IVER = "$params.Image_Version"
        SH_JOBDIR = "$JOB_NAME/$BUILD_NUMBER"
        SH_FPLAT = "$params.FPGA_PLAT"
        SH_KEY = "$params.KEYWORDS"
        TOLIST = "anthony.tian@cixtech.com"
        RESULT = "PASS"
    }
    stages {
        stage('SCM') {
            steps{
                echo 'This is SCM step' 
                sh '''
                fpga/scm.sh $SH_JOBDIR setup
                '''
            }
        }
        stage('Deploy') {
            steps{
                echo 'This is Deploy step'
                sh '''
                # deploy bitfile in remote FPGA-PC
                #fpga/dpbit.py $SH_FPLAT $SH_JOBDIR $SH_MODEL cp $SH_APBIT $SH_SEBIT
                # download and deploy image to FPGA-PC
                #fpga/dpimg.py $SH_FPLAT $SH_JOBDIR $SH_MODEL $SH_APBIT $SH_SEBIT $SH_ITYPE $SH_IVER
                '''
            }
        }
        stage('jobConfig') {
            steps{
                echo 'This is Job Configure step'    
                sh '''
                fpga/jconf.py $SH_FPLAT $SH_JOBDIR $SH_MODEL $SH_APBIT $SH_SEBIT $SH_ITYPE $SH_IVER
                '''
            }
        }
        stage('jobRun') {
            steps{
                echo 'This is jobRun step'
                sh '''
                #fpga/run.sh $SH_JOBDIR $SH_MODEL $SH_SEBIT $SH_APBIT $SH_ITYPE $SH_IVER $SH_KEY
                RESULT = "FAIL"
                '''
            }
        }
    }
}
