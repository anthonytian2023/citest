pipeline{
    agent { label 'verify' }
    post {
        always{
            sh '''
            # clean up
            fpga/dpbit.py $SH_FPAT $SH_JOBDIR $SH_MODEL rm $SH_APBIT $SH_SEBIT
            fpga/scm.sh $SH_JOBDIR teardown
            '''
            script{
                publishHTML (target: [
                    allowMissing: false,
                    alwaysLinkToLastBuild: false,
                    keepAll: true,
                    reportDir: '/home/jackeydu/jenkins/workspace/report/',
                    reportFiles: 'reports.html',
                    reportName: "${SH_MODEL}-Test-Report"
                ])
            }
        }
    }
    parameters {
        choice(name: 'Model', choices: ['BROM', 'AP'], description: 'Select the test model...')
        string(name: 'SE_Bitfile_Version', defaultValue: 'fpga3_20221227_csu_se_new_dp_usb2', 
        description: 'Input the bitfile version for BootROM or SE firmware test')
        string(name: 'AP_Bitfile_Version', defaultValue: 'ap_20230129', 
        description: 'Input the bitfile version for AP model test')
        choice(name: 'Image_Type', choices: ['Daily', 'Release', 'CI'], 
        description: 'Select the test Image type...')
        string(name: 'Image_Version', defaultValue: 'latest', 
        description: 'Input the target Image version in nexus like 2023020904-0000101')
        choice(name: 'FPGA-PLAT', choices: ['fpga01', 'fpga02', 'fpga03-sub1'], 
        description: 'Select the FPGA board...')
    }
    environment {
        SH_MODEL = "$params.Model"
        SH_SEBIT =  "$params.SE_Bitfile_Version"
        SH_APBIT = "$params.AP_Bitfile_Version"
        SH_ITYPE =  "$params.Image_Type"
        SH_IVER = "$params.Image_Version"
        SH_JOBDIR = "$JOB_NAME/$BUILD_NUMBER"
        SH_FPLAT = "$params.FPGA-PLAT"
    }
    stages {
        stage('SCM') {
            steps{
                echo 'This is SCM step' 
                sh '''
                fpga/scm.sh $SH_JOBDIR setup
                '''
            }
        }
        stage('Deploy') {
            steps{
                echo 'This is Deploy step'
                # deploy bitfile in remote FPGA-PC
                fpga/dpbit.py $SH_FPAT $SH_JOBDIR $SH_MODEL cp $SH_APBIT $SH_SEBIT
            }
        }
        stage('jobGen') {
            steps{
                echo 'This is jobGen step'    
            }
        }
        stage('jobRun') {
            steps{
                echo 'This is jobRun step'
                sh '''
                fpga/run.sh $SH_MODEL $SH_SEBIT $SH_APBIT $SH_ITYPE $SH_VER
                '''
            }
        }
    }
}
